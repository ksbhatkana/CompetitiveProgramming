class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        char_map = {}  # Dictionary to store last seen positions
        left = 0  # Left pointer
        right = 0  # Right pointer
        max_length = 0

        while right < len(s):  # Iterate until the right pointer reaches the end
            if s[right] in char_map and char_map[s[right]] >= left:
                left = char_map[s[right]] + 1  # Move left pointer forward
            
            char_map[s[right]] = right  # Update the last seen index of character
            max_length = max(max_length, right - left + 1)  # Update max length
            right += 1  # Expand the window
            
        return max_length
