class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        hash_map = [-1] * 256  # Array to store last seen indices of characters
        n = len(s)
        left = 0
        right = 0
        max_len = 0

        while right < n:
            if hash_map[ord(s[right])] != -1:  # If character was seen before
                if hash_map[ord(s[right])] >= left:
                    left = hash_map[ord(s[right])] + 1  # Move left pointer

            curr_len = right - left + 1
            max_len = max(curr_len, max_len)

            hash_map[ord(s[right])] = right  # Update last seen index of char
            right += 1  # Move right pointer

        return max_len
