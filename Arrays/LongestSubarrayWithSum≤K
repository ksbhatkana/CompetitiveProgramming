class Solution:
    def longestSubarraySumK(self, nums: List[int], k: int) -> int:
        left = 0  # Left pointer
        right = 0  # Right pointer
        current_sum = 0  # Store sum of the window
        max_length = 0  # Maximum valid subarray length
        
        while right < len(nums):  
            current_sum += nums[right]  # Expand window by adding right element
            
            while current_sum > k and left <= right:  
                current_sum -= nums[left]  # Shrink window from the left
                left += 1  

            # Update max length whenever sum <= k
            max_length = max(max_length, right - left + 1)
            right += 1  # Move right pointer
            
        return max_length
